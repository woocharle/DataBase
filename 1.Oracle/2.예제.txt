-- 학생관련 스키마 --
학생(학번(pk), 이름, 주소, 학년)
강좌(강좌번호(pk), 과목이름, 학점, 시간, 장소, 과목번호(fk))
과목(과목번호(pk), 과목이름, 학점)
등록(등록번호(pk), 학번(pk), 과목번호, 성적, 강좌번호(fk))


SuperAccount

-- 일반 계정 만들기
-- CRAETE USER 내계정 INDENTIFIED BY 비밀번호;
-- Oracle 12c부터는 공통계정 앞에 c##을 붙이도록 네이밍 규칙 변경
CREATE USER c##jwc IDENTIFIED BY 1112;

-- 내 계정에 접속권한과 자원 사용 권한을 부여하자
-- GRANT는 권한 부여 명령어
GRANT CONNECT, RESOURCE TO c##jwc;

ALTER USER c##jwc default tablespace USERS QUOTA unlimited on users;

CREATE USER c##wootool IDENTIFIED BY 1112;

-- 내 계정에 접속권한과 자원 사용 권한을 부여하자
-- GRANT는 권한 부여 명령어
GRANT CONNECT, RESOURCE TO c##wootool;

ALTER USER c##wootool default tablespace USERS QUOTA unlimited on users;


-- VIEW 승인
GRANT CREATE VIEW TO c##jwc


=========================================================================================================


-PL/SQL-

set serveroutput on;

DECLARE
    i int := 9;
    grade varchar2(50) := 'A';
    
BEGIN
    if i = 10 then 
        dbms_output.put_line('i는 ' || i || ' 입니다.');
        dbms_output.put_line('성적은 ' || grade || ' 입니다.');
        
    end if;
    
    if mod(i, 2) = 0  then 
        dbms_output.put_line(i || '는 짝수 입니다.');

    else
        dbms_output.put_line(i || '는 홀수 입니다.');
    end if;
    
END ;


DECLARE
    i int := 9;
    res VARCHAR2(50) := ' ';
    
BEGIN
    if mod(i, 2) = 0  then 
        res := '짝수';

    else
        res := '홀수';
    end if;
    
    dbms_output.put_line(i || '는 '|| res || '입니다.');
    
END ;

DECLARE
    i int := 100;
    res VARCHAR2(50) := '';
    
BEGIN
    if i >= 90  then 
        res := 'A';
    elsif i >= 80 then
        res := 'B';
    elsif i >= 70 then
        res := 'C';
    else
        res := 'F';
    end if;
    
    dbms_output.put_line('성적은 '|| res || '입니다.');
    
END ;


DECLARE
    cnt int;
BEGIN
    for cnt in 1..10 loop
        dbms_output.put_line('cnt = ' || cnt);
    end loop;
    
END ;

-- 짝수 출력
DECLARE
    cnt int;
BEGIN
    for cnt in 1..10 loop
        if mod(cnt, 2) = 0 then
            dbms_output.put_line('cnt = ' || cnt);
        end if;
    end loop;
    
END ;

-- 짝수의 합 출력
DECLARE
    tot int := 0;
    cnt int;
BEGIN
    for cnt in 1..10 loop
        if mod(cnt, 2) = 0 then
            tot := tot + cnt;    
        end if;
    end loop;
    dbms_output.put_line('1부터 10까지 짝수의 총 합계는 ' || tot);
    
END ;

-- 1 ~ 10까지 출력
DECLARE
    tot int := 0;
    cnt int := 0;
BEGIN
    while cnt < 10 loop
        cnt := cnt + 1;
        dbms_output.put_line(cnt);
        
    end loop;
END ;


DECLARE
    tot int := 0;
    cnt int := 0;
BEGIN
    while cnt < 10 loop
        cnt := cnt + 1;
        if mod(cnt, 2) = 0 then
            dbms_output.put_line(cnt);
        end if;
    end loop;
END ;

DECLARE
    tot int := 0;
    cnt int := 0;
BEGIN
    while cnt < 10 loop
        cnt := cnt + 1;
        if mod(cnt, 2) = 0 then
            tot := tot + cnt;
        end if;
    end loop;
    dbms_output.put_line(tot);
    
END ;



DECLARE
    tot int := 0;
    cnt int := 0;
BEGIN
    loop
        cnt := cnt + 1;
        dbms_output.put_line(cnt);
        exit when cnt = 10;
    end loop;
END ;


DECLARE
    tot int := 0;
    cnt int := 0;
BEGIN
    loop
        cnt := cnt + 1;
        if mod(cnt, 2) = 0 then
            dbms_output.put_line(cnt);
        end if;
        
        exit when cnt = 10;
    end loop;
END ;

DECLARE
    tot int := 0;
    cnt int := 0;
BEGIN
    loop
        cnt := cnt + 1;
        if mod(cnt, 2) = 0 then
            tot := tot + cnt;
        end if;
        
        exit when cnt = 10;
    end loop;
    dbms_output.put_line(tot);
    
END ;


================================================<프로시저>=================================================


CREATE PROCEDURE insertbook 
(i_bookid book.bookid%TYPE, i_bookname book.bookname%TYPE, 
i_publisher book.publisher%TYPE, i_price book.price%TYPE) AS
BEGIN
    INSERT INTO book
    VALUES(i_bookid, i_bookname, i_publisher, i_price);

END;



EXEC insertbook(13, '스포츠 과학', '마당과학서적', 25000);

--begin ~ end 안에서 사용되는 select문

CREATE PROCEDURE check_book
(i_bookid book.bookid%TYPE, i_bookname book.bookname%TYPE, 
i_publisher book.publisher%TYPE, i_price book.price%TYPE) AS
cnt NUMBER;
BEGIN
    SELECT count(*)
    INTO cnt 
    FROM book
    WHERE bookname = i_bookname and publisher = i.publisher;
    if(cnt = 0) then
        INSERT INTO book VALUES(i_bookid, i_bookname, i_publisher, i_price);
        dbms_output.put_line('데이터 삽입 성공');
    else
        UPDATE book SET price = i_price WHERE bookname = i_bookname AND publisher = i_publisher;
        dbms_output.put_line('데이터 수정 성공');
        
    end if;

END;

EXEC check_book(11, '축구의 역사', '굿스포츠', 8000);
EXEC check_book(11, '골프의 역사', '굿스포츠', 10000);


SELECT * FROM book;
COMMIT;














